package generics.example;

import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;

class GenericClass<T> extends AbstractList<T>
{
	private List<T> list;
	
	// Constructor
	private GenericClass(List<T> list) 
	{
		this.list = new ArrayList<>(list);
	}

	public static <T> List<T> reverseList(List<T> list) 
	{
		return new GenericClass<>(list);
	}

	@Override
	public T get(int i) {
		return list.get(size() - 1 - i);
	}

	@Override
	public int size() 
	{
		return list.size();
	}

	@Override
	public boolean add(T e) 
	{
		list.add(0, e);
		return true;
	}

	@Override
	public T set(int index, T element) 
	{
		return list.set(size() - 1 - index, element);
	}

	@Override
	public void add(int index, T element) 
	{
		list.add(size() - 1 - index, element);
	}

	@Override
	public T remove(int index) 
	{
		return list.remove(size() - 1 - index);
	}
}